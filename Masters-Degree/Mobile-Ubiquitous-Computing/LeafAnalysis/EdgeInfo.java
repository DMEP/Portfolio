package leafAnalysis;

/*
 * This file is the EdgeInfo.java used by EdgeResults.java to display the edges
 * detected. @author Daniel Elstob @version 1.0 23-04-2015
 */
import java.awt.Polygon;

public class EdgeInfo extends javax.swing.JPanel {
    EdgeResults er = null;
    double[][] coordinates = null;
    public double cSize = 0;
    public int pArea = 0;

    // Creates new form EdgeInfo
    public EdgeInfo(Polygon p, EdgeResults eR) {
        initComponents();
        if (p != null) {
            graphicEdge.p1 = p;
            coordinates = Edging.extractCoordinates(p);
            setEdgeInformation();
            er = eR;
        }
    }

    public EdgeInfo() {
        initComponents();
    }

    // Set text of analysed information
    public void setEdgeInformation() {
        if (coordinates != null) {
            if (cSize <= 0) {
                cSize = Edging.findCentroidDistance(coordinates);
            }
            centroidSize.setText("Centroid size: " + Math.round(cSize));
        } else {
            centroidSize.setText("Unable to calculate");
        }
        if (pArea <= 0) {
            pArea = Edging.findArea(graphicEdge.p1);
        }
        pixelArea.setText("Pixel area: " + pArea);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graphicEdge = new leafAnalysis.Drawer();
        centroidSize = new javax.swing.JLabel();
        pixelArea = new javax.swing.JLabel();
        lblKeep = new javax.swing.JCheckBox();

        javax.swing.GroupLayout graphicEdgeLayout = new javax.swing.GroupLayout(graphicEdge);
        graphicEdge.setLayout(graphicEdgeLayout);
        graphicEdgeLayout.setHorizontalGroup(
            graphicEdgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 86, Short.MAX_VALUE)
        );
        graphicEdgeLayout.setVerticalGroup(
            graphicEdgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 95, Short.MAX_VALUE)
        );

        lblKeep.setSelected(true);
        lblKeep.setText("Keep Edge");
        lblKeep.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        lblKeep.setMargin(new java.awt.Insets(0, 0, 0, 0));
        lblKeep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblKeepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(graphicEdge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblKeep, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pixelArea)
                    .addComponent(centroidSize)))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {centroidSize, lblKeep, pixelArea});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(graphicEdge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblKeep)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pixelArea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(centroidSize, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {centroidSize, lblKeep, pixelArea});

    }// </editor-fold>//GEN-END:initComponents

    // Set the checkbox for keeping edges
    private void lblKeepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblKeepActionPerformed

        if (er != null && er.keep != null) {
            er.keep[er.curCnt] = lblKeep.isSelected();
            er.ms.li.nEdges = er.keptEdge();
            er.ms.li.txtNOE.setText(Integer.toString(er.ms.li.nEdges));
            er.ms.li.repaint();
        }

    }//GEN-LAST:event_lblKeepActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel centroidSize;
    public leafAnalysis.Drawer graphicEdge;
    public javax.swing.JCheckBox lblKeep;
    public javax.swing.JLabel pixelArea;
    // End of variables declaration//GEN-END:variables
}
